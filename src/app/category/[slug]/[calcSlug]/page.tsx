

import Link from 'next/link';
import { notFound } from 'next/navigation';
import { ArrowLeft, Construction } from 'lucide-react';
import dynamic from 'next/dynamic';

import { Button } from '@/components/ui/button';
import { categories } from '@/lib/categories';
import { calculators } from '@/lib/calculators';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { CategoryIcon } from '@/components/category-icon';
import { EmbedWidget } from '@/components/embed-widget';

const calculatorComponents: { [key: string]: React.ComponentType } = {
    'sip-calculator': dynamic(() => import('@/components/calculators/finance/sip-calculator')),
    'loan-emi-calculator': dynamic(() => import('@/components/calculators/finance/loan-emi-calculator')),
    'retirement-savings-calculator': dynamic(() => import('@/components/calculators/finance/retirement-savings-calculator')),
    'compound-interest-calculator': dynamic(() => import('@/components/calculators/finance/compound-interest-calculator')),
    '401k-contribution-calculator': dynamic(() => import('@/components/calculators/finance/401k-contribution-calculator')),
    'net-worth-calculator': dynamic(() => import('@/components/calculators/finance/net-worth-calculator')),
    'credit-card-payoff-calculator': dynamic(() => import('@/components/calculators/finance/credit-card-payoff-calculator')),
    'mortgage-payment-calculator': dynamic(() => import('@/components/calculators/finance/mortgage-payment-calculator')),
    'student-loan-repayment-calculator': dynamic(() => import('@/components/calculators/finance/student-loan-repayment-calculator')),
    'inflation-calculator': dynamic(() => import('@/components/calculators/finance/inflation-calculator')),
    'roth-ira-contribution-limit-calculator': dynamic(() => import('@/components/calculators/finance/roth-ira-contribution-limit-calculator')),
    'present-value-calculator': dynamic(() => import('@/components/calculators/finance/present-value-calculator')),
    'future-value-calculator': dynamic(() => import('@/components/calculators/finance/future-value-calculator')),
    'annuity-payment-calculator': dynamic(() => import('@/components/calculators/finance/annuity-payment-calculator')),
    'perpetuity-calculator': dynamic(() => import('@/components/calculators/finance/perpetuity-calculator')),
    'growing-annuity-calculator': dynamic(() => import('@/components/calculators/finance/growing-annuity-calculator')),
    'npv-calculator': dynamic(() => import('@/components/calculators/finance/npv-calculator')),
    'dcf-calculator': dynamic(() => import('@/components/calculators/finance/dcf-calculator')),
    'payback-period-calculator': dynamic(() => import('@/components/calculators/finance/payback-period-calculator')),
    'discount-rate-calculator': dynamic(() => import('@/components/calculators/finance/discount-rate-calculator')),
    'price-to-earnings-ratio-calculator': dynamic(() => import('@/components/calculators/finance/price-to-earnings-ratio-calculator')),
    'earnings-per-share-calculator': dynamic(() => import('@/components/calculators/finance/earnings-per-share-calculator')),
    'return-on-equity-calculator': dynamic(() => import('@/components/calculators/finance/return-on-equity-calculator')),
    'return-on-assets-calculator': dynamic(() => import('@/components/calculators/finance/return-on-assets-calculator')),
    'return-on-investment-calculator': dynamic(() => import('@/components/calculators/finance/return-on-investment-calculator')),
    'debt-to-equity-ratio-calculator': dynamic(() => import('@/components/calculators/finance/debt-to-equity-ratio-calculator')),
    'interest-coverage-ratio-calculator': dynamic(() => import('@/components/calculators/finance/interest-coverage-ratio-calculator')),
    'current-ratio-calculator': dynamic(() => import('@/components/calculators/finance/current-ratio-calculator')),
    'quick-ratio-calculator': dynamic(() => import('@/components/calculators/finance/quick-ratio-calculator')),
    'working-capital-calculator': dynamic(() => import('@/components/calculators/finance/working-capital-calculator')),
    'cash-conversion-cycle-calculator': dynamic(() => import('@/components/calculators/finance/cash-conversion-cycle-calculator')),
    'free-cash-flow-calculator': dynamic(() => import('@/components/calculators/finance/free-cash-flow-calculator')),
    'operating-margin-calculator': dynamic(() => import('@/components/calculators/finance/operating-margin-calculator')),
    'gross-margin-calculator': dynamic(() => import('@/components/calculators/finance/gross-margin-calculator')),
    'net-profit-margin-calculator': dynamic(() => import('@/components/calculators/finance/net-profit-margin-calculator')),
    'ebitda-ebit-calculator': dynamic(() => import('@/components/calculators/finance/ebitda-ebit-calculator')),
    'enterprise-value-calculator': dynamic(() => import('@/components/calculators/finance/enterprise-value-calculator')),
    'ev-ebit-ebitda-multiple-calculator': dynamic(() => import('@/components/calculators/finance/ev-ebit-ebitda-multiple-calculator')),
    'sharpe-ratio-calculator': dynamic(() => import('@/components/calculators/finance/sharpe-ratio-calculator')),
    'sortino-ratio-calculator': dynamic(() => import('@/components/calculators/finance/sortino-ratio-calculator')),
    'treynor-ratio-calculator': dynamic(() => import('@/components/calculators/finance/treynor-ratio-calculator')),
    'alpha-investment-calculator': dynamic(() => import('@/components/calculators/finance/alpha-investment-calculator')),
    'volatility-standard-deviation-calculator': dynamic(() => import('@/components/calculators/finance/volatility-standard-deviation-calculator')),
    'correlation-coefficient-calculator': dynamic(() => import('@/components/calculators/finance/correlation-coefficient-calculator')),
    'beta-asset-calculator': dynamic(() => import('@/components/calculators/finance/beta-asset-calculator')),
    'portfolio-variance-calculator': dynamic(() => import('@/components/calculators/finance/portfolio-variance-calculator')),
    'portfolio-expected-return-calculator': dynamic(() => import('@/components/calculators/finance/portfolio-expected-return-calculator')),
    'capm-calculator': dynamic(() => import('@/components/calculators/finance/capm-calculator')),
    'wacc-calculator': dynamic(() => import('@/components/calculators/finance/wacc-calculator')),
    'leverage-debt-ratio-calculator': dynamic(() => import('@/components/calculators/finance/leverage-debt-ratio-calculator')),
    'black-scholes-calculator': dynamic(() => import('@/components/calculators/finance/black-scholes-calculator')),
    'option-payoff-calculator': dynamic(() => import('@/components/calculators/finance/option-payoff-calculator')),
    'binomial-option-pricing-calculator': dynamic(() => import('@/components/calculators/finance/binomial-option-pricing-calculator')),
    'monte-carlo-portfolio-calculator': dynamic(() => import('@/components/calculators/finance/monte-carlo-portfolio-calculator')),
    'value-at-risk-calculator': dynamic(() => import('@/components/calculators/finance/value-at-risk-calculator')),
    'conditional-value-at-risk-calculator': dynamic(() => import('@/components/calculators/finance/conditional-value-at-risk-calculator')),
    'bond-yield-to-maturity-calculator': dynamic(() => import('@/components/calculators/finance/bond-yield-to-maturity-calculator')),
    'bond-price-calculator': dynamic(() => import('@/components/calculators/finance/bond-price-calculator')),
    'bond-duration-calculator': dynamic(() => import('@/components/calculators/finance/bond-duration-calculator')),
    'bond-convexity-calculator': dynamic(() => import('@/components/calculators/finance/bond-convexity-calculator')),
    'bond-yield-spread-calculator': dynamic(() => import('@/components/calculators/finance/bond-yield-spread-calculator')),
    'yield-to-call-calculator': dynamic(() => import('@/components/calculators/finance/yield-to-call-calculator')),
    'zero-coupon-bond-valuation-calculator': dynamic(() => import('@/components/calculators/finance/zero-coupon-bond-valuation-calculator')),
    'simple-inflation-adjusted-return-calculator': dynamic(() => import('@/components/calculators/finance/simple-inflation-adjusted-return-calculator')),
    'real-rate-of-return-calculator': dynamic(() => import('@/components/calculators/finance/real-rate-of-return-calculator')),
    'margin-of-safety-calculator': dynamic(() => import('@/components/calculators/finance/margin-of-safety-calculator')),
    'overhead-rate-allocation-calculator': dynamic(() => import('@/components/calculators/finance/overhead-rate-allocation-calculator')),
    'activity-based-costing-calculator': dynamic(() => import('@/components/calculators/finance/activity-based-costing-calculator')),
    'depreciation-straight-line-calculator': dynamic(() => import('@/components/calculators/finance/depreciation-straight-line-calculator')),
    'depreciation-double-declining-calculator': dynamic(() => import('@/components/calculators/finance/depreciation-double-declining-calculator')),
    'depreciation-sum-of-years-digits-calculator': dynamic(() => import('@/components/calculators/finance/depreciation-sum-of-years-digits-calculator')),
    'macrs-depreciation-calculator': dynamic(() => import('@/components/calculators/finance/macrs-depreciation-calculator')),
    'amortization-schedule-generator': dynamic(() => import('@/components/calculators/finance/amortization-schedule-generator')),
    'capex-payback-calculator': dynamic(() => import('@/components/calculators/finance/capex-payback-calculator')),
    'sensitivity-analysis-what-if-calculator': dynamic(() => import('@/components/calculators/finance/sensitivity-analysis-what-if-calculator')),
    'scenario-analysis-calculator': dynamic(() => import('@/components/calculators/finance/scenario-analysis-calculator')),
    'currency-exchange-calculator': dynamic(() => import('@/components/calculators/finance/currency-exchange-calculator')),
    'currency-volatility-calculator': dynamic(() => import('@/components/calculators/finance/currency-volatility-calculator')),
    'fixed-vs-floating-rate-calculator': dynamic(() => import('@/components/calculators/finance/fixed-vs-floating-rate-calculator')),
    'swap-spread-calculator': dynamic(() => import('@/components/calculators/finance/swap-spread-calculator')),
    'forward-rate-agreement-calculator': dynamic(() => import('@/components/calculators/finance/forward-rate-agreement-calculator')),
    'breakeven-inflation-rate-calculator': dynamic(() => import('@/components/calculators/finance/breakeven-inflation-rate-calculator')),
    'credit-default-swap-calculator': dynamic(() => import('@/components/calculators/finance/credit-default-swap-calculator')),
    'put-call-parity-calculator': dynamic(() => import('@/components/calculators/finance/put-call-parity-calculator')),
    'dscr-calculator': dynamic(() => import('@/components/calculators/business-startup/dscr-calculator')),
    'break-even-sales-dollar-calculator': dynamic(() => import('@/components/calculators/business-startup/break-even-sales-dollar-calculator')),
    'contribution-margin-calculator': dynamic(() => import('@/components/calculators/business-startup/contribution-margin-calculator')),
    'operating-leverage-calculator': dynamic(() => import('@/components/calculators/business-startup/operating-leverage-calculator')),
    'water-footprint-of-food-calculator': dynamic(() => import('@/components/calculators/health-fitness/water-footprint-of-food-calculator')),
    'bmi-calculator': dynamic(() => import('@/components/calculators/health-fitness/bmi-calculator')),
    'bmr-calculator': dynamic(() => import('@/components/calculators/health-fitness/bmr-calculator')),
    'target-heart-rate-calculator': dynamic(() => import('@/components/calculators/health-fitness/target-heart-rate-calculator')),
    'body-fat-percentage-calculator': dynamic(() => import('@/components/calculators/health-fitness/body-fat-percentage-calculator')),
    'lean-body-mass-calculator': dynamic(() => import('@/components/calculators/health-fitness/lean-body-mass-calculator')),
    'ideal-body-weight-calculator': dynamic(() => import('@/components/calculators/health-fitness/ideal-body-weight-calculator')),
    'waist-to-hip-ratio-calculator': dynamic(() => import('@/components/calculators/health-fitness/waist-to-hip-ratio-calculator')),
    'waist-to-height-ratio-calculator': dynamic(() => import('@/components/calculators/health-fitness/waist-to-height-ratio-calculator')),
    'body-adiposity-index-calculator': dynamic(() => import('@/components/calculators/health-fitness/body-adiposity-index-calculator')),
    'ponderal-index-calculator': dynamic(() => import('@/components/calculators/health-fitness/ponderal-index-calculator')),
    'relative-fat-mass-calculator': dynamic(() => import('@/components/calculators/health-fitness/relative-fat-mass-calculator')),
    'calorie-deficit-calculator': dynamic(() => import('@/components/calculators/health-fitness/calorie-deficit-calculator')),
    'calorie-surplus-calculator': dynamic(() => import('@/components/calculators/health-fitness/calorie-surplus-calculator')),
    'daily-calorie-needs-calculator': dynamic(() => import('@/components/calculators/health-fitness/daily-calorie-needs-calculator')),
    'macro-ratio-calculator': dynamic(() => import('@/components/calculators/health-fitness/macro-ratio-calculator')),
    'protein-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/protein-intake-calculator')),
    'fat-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/fat-intake-calculator')),
    'keto-macro-calculator': dynamic(() => import('@/components/calculators/health-fitness/keto-macro-calculator')),
    'intermittent-fasting-calculator': dynamic(() => import('@/components/calculators/health-fitness/intermittent-fasting-calculator')),
    'glycemic-load-calculator': dynamic(() => import('@/components/calculators/health-fitness/glycemic-load-calculator')),
    'meal-glycemic-load-calculator': dynamic(() => import('@/components/calculators/health-fitness/meal-glycemic-load-calculator')),
    'hydration-needs-calculator': dynamic(() => import('@/components/calculators/health-fitness/hydration-needs-calculator')),
    'iron-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/iron-intake-calculator')),
    'calcium-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/calcium-intake-calculator')),
    'zinc-requirement-calculator': dynamic(() => import('@/components/calculators/health-fitness/zinc-requirement-calculator')),
    'magnesium-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/magnesium-intake-calculator')),
    'fiber-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/fiber-intake-calculator')),
    'sodium-potassium-ratio-calculator': dynamic(() => import('@/components/calculators/health-fitness/sodium-potassium-ratio-calculator')),
    'daily-antioxidant-orac-goal-calculator': dynamic(() => import('@/components/calculators/health-fitness/daily-antioxidant-orac-goal-calculator')),
    'pdcaas-calculator': dynamic(() => import('@/components/calculators/health-fitness/pdcaas-calculator')),
    'vitamin-d-sun-exposure-calculator': dynamic(() => import('@/components/calculators/health-fitness/vitamin-d-sun-exposure-calculator')),
    'training-stress-score-calculator': dynamic(() => import('@/components/calculators/health-fitness/training-stress-score-calculator')),
    'strength-to-weight-ratio-calculator': dynamic(() => import('@/components/calculators/health-fitness/strength-to-weight-ratio-calculator')),
    'training-volume-calculator': dynamic(() => import('@/components/calculators/health-fitness/training-volume-calculator')),
    'progressive-overload-calculator': dynamic(() => import('@/components/calculators/health-fitness/progressive-overload-calculator')),
    'rest-time-between-sets-calculator': dynamic(() => import('@/components/calculators/health-fitness/rest-time-between-sets-calculator')),
    'heart-rate-zone-training-calculator': dynamic(() => import('@/components/calculators/health-fitness/heart-rate-zone-training-calculator')),
    'recovery-heart-rate-calculator': dynamic(() => import('@/components/calculators/health-fitness/recovery-heart-rate-calculator')),
    'exercise-calorie-burn-calculator': dynamic(() => import('@/components/calculators/health-fitness/exercise-calorie-burn-calculator')),
    'sleep-debt-calculator-hf': dynamic(() => import('@/components/calculators/health-fitness/sleep-debt-calculator')),
    'sleep-efficiency-calculator': dynamic(() => import('@/components/calculators/health-fitness/sleep-efficiency-calculator')),
    'stress-level-self-assessment-calculator': dynamic(() => import('@/components/calculators/health-fitness/stress-level-self-assessment-calculator')),
    'meditation-time-progress-tracker-calculator': dynamic(() => import('@/components/calculators/health-fitness/meditation-time-progress-tracker-calculator')),
    'work-life-balance-time-allocation-calculator': dynamic(() => import('@/components/calculators/health-fitness/work-life-balance-time-allocation-calculator')),
    'blood-pressure-risk-calculator': dynamic(() => import('@/components/calculators/health-fitness/blood-pressure-risk-calculator')),
    'cholesterol-risk-calculator': dynamic(() => import('@/components/calculators/health-fitness/cholesterol-risk-calculator')),
    'blood-sugar-to-hba1c-converter': dynamic(() => import('@/components/calculators/health-fitness/blood-sugar-to-hba1c-converter')),
    'diabetes-risk-type2-calculator': dynamic(() => import('@/components/calculators/health-fitness/diabetes-risk-type2-calculator')),
    'cardiovascular-disease-risk-calculator': dynamic(() => import('@/components/calculators/health-fitness/cardiovascular-disease-risk-calculator')),
    'heart-attack-framingham-risk-calculator': dynamic(() => import('@/components/calculators/health-fitness/heart-attack-framingham-risk-calculator')),
    'stroke-risk-calculator': dynamic(() => import('@/components/calculators/health-fitness/stroke-risk-calculator')),
    'bone-density-t-score-calculator': dynamic(() => import('@/components/calculators/health-fitness/bone-density-t-score-calculator')),
    'osteoporosis-risk-calculator': dynamic(() => import('@/components/calculators/health-fitness/osteoporosis-risk-calculator')),
    'arthritis-risk-score-calculator': dynamic(() => import('@/components/calculators/health-fitness/arthritis-risk-score-calculator')),
    'cancer-risk-lifestyle-calculator': dynamic(() => import('@/components/calculators/health-fitness/cancer-risk-lifestyle-calculator')),
    'lifespan-expectancy-calculator': dynamic(() => import('@/components/calculators/health-fitness/lifespan-expectancy-calculator')),
    'marathon-finish-time-predictor': dynamic(() => import('@/components/calculators/health-fitness/marathon-finish-time-predictor')),
    'half-marathon-pace-calculator': dynamic(() => import('@/components/calculators/health-fitness/half-marathon-pace-calculator')),
    'triathlon-split-time-calculator': dynamic(() => import('@/components/calculators/health-fitness/triathlon-split-time-calculator')),
    'cycling-ftp-calculator': dynamic(() => import('@/components/calculators/health-fitness/cycling-ftp-calculator')),
    'swimming-swolf-score-calculator': dynamic(() => import('@/components/calculators/health-fitness/swimming-swolf-score-calculator')),
    'golf-handicap-calculator': dynamic(() => import('@/components/calculators/health-fitness/golf-handicap-calculator')),
    'tennis-serve-speed-calculator': dynamic(() => import('@/components/calculators/health-fitness/tennis-serve-speed-calculator')),
    'soccer-vo2-requirement-calculator': dynamic(() => import('@/components/calculators/health-fitness/soccer-vo2-requirement-calculator')),
    'baseball-pitch-speed-calculator': dynamic(() => import('@/components/calculators/health-fitness/baseball-pitch-speed-calculator')),
    'basketball-shooting-percentage-calculator': dynamic(() => import('@/components/calculators/health-fitness/basketball-shooting-percentage-calculator')),
    'gluten-intake-tracker-calculator': dynamic(() => import('@/components/calculators/health-fitness/gluten-intake-tracker-calculator')),
    'low-sodium-diet-planner-calculator': dynamic(() => import('@/components/calculators/health-fitness/low-sodium-diet-planner-calculator')),
    'dash-diet-sodium-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/dash-diet-sodium-intake-calculator')),
    'mediterranean-diet-compliance-calculator': dynamic(() => import('@/components/calculators/health-fitness/mediterranean-diet-compliance-calculator')),
    'vegan-protein-requirement-calculator': dynamic(() => import('@/components/calculators/health-fitness/vegan-protein-requirement-calculator')),
    'lactose-tolerance-estimator': dynamic(() => import('@/components/calculators/health-fitness/lactose-tolerance-estimator')),
    'food-allergy-risk-score-calculator': dynamic(() => import('@/components/calculators/health-fitness/food-allergy-risk-score-calculator')),
    'total-energy-expenditure-calculator': dynamic(() => import('@/components/calculators/health-fitness/total-energy-expenditure-calculator')),
    'respiratory-quotient-calculator': dynamic(() => import('@/components/calculators/health-fitness/respiratory-quotient-calculator')),
    'maximum-lactate-steady-state-calculator': dynamic(() => import('@/components/calculators/health-fitness/maximum-lactate-steady-state-calculator')),
    'anaerobic-threshold-calculator': dynamic(() => import('@/components/calculators/health-fitness/anaerobic-threshold-calculator')),
    'blood-oxygen-saturation-estimator': dynamic(() => import('@/components/calculators/health-fitness/blood-oxygen-saturation-estimator')),
    'hydration-sweat-rate-calculator': dynamic(() => import('@/components/calculators/health-fitness/hydration-sweat-rate-calculator')),
    'core-body-temperature-rise-calculator': dynamic(() => import('@/components/calculators/health-fitness/core-body-temperature-rise-calculator')),
    'injury-recovery-timeline-calculator': dynamic(() => import('@/components/calculators/health-fitness/injury-recovery-timeline-calculator')),
    'physical-therapy-session-intensity-calculator': dynamic(() => import('@/components/calculators/health-fitness/physical-therapy-session-intensity-calculator')),
    'range-of-motion-progress-calculator': dynamic(() => import('@/components/calculators/health-fitness/range-of-motion-progress-calculator')),
    'pregnancy-weight-gain-calculator': dynamic(() => import('@/components/calculators/health-fitness/pregnancy-weight-gain-calculator')),
    'due-date-calculator': dynamic(() => import('@/components/calculators/health-fitness/due-date-calculator')),
    'fertility-ovulation-calculator': dynamic(() => import('@/components/calculators/health-fitness/fertility-ovulation-calculator')),
    'breastfeeding-calorie-needs-calculator': dynamic(() => import('@/components/calculators/health-fitness/breastfeeding-calorie-needs-calculator')),
    'infant-growth-percentile-calculator': dynamic(() => import('@/components/calculators/health-fitness/infant-growth-percentile-calculator')),
    'child-bmi-percentile-calculator': dynamic(() => import('@/components/calculators/health-fitness/child-bmi-percentile-calculator')),
    'baby-sleep-needs-calculator': dynamic(() => import('@/components/calculators/health-fitness/baby-sleep-needs-calculator')),
    'toddler-calorie-requirement-calculator': dynamic(() => import('@/components/calculators/health-fitness/toddler-calorie-requirement-calculator')),
    'resting-metabolic-rate-calculator': dynamic(() => import('@/components/calculators/health-fitness/resting-metabolic-rate-calculator')),
    'batting-average-calculator': dynamic(() => import('@/components/calculators/cricket/batting-average-calculator')),
    'bowling-average-calculator': dynamic(() => import('@/components/calculators/cricket/bowling-average-calculator')),
    'strike-rate-calculator': dynamic(() => import('@/components/calculators/cricket/strike-rate-calculator')),
    'bowling-economy-rate-calculator': dynamic(() => import('@/components/calculators/cricket/bowling-economy-rate-calculator')),
    'net-run-rate-calculator': dynamic(() => import('@/components/calculators/cricket/net-run-rate-calculator')),
    'required-run-rate-calculator': dynamic(() => import('@/components/calculators/cricket/required-run-rate-calculator')),
    'team-run-rate-calculator': dynamic(() => import('@/components/calculators/cricket/team-run-rate-calculator')),
    'player-performance-index-calculator': dynamic(() => import('@/components/calculators/cricket/player-performance-index-calculator')),
    'fantasy-points-calculator': dynamic(() => import('@/components/calculators/cricket/fantasy-points-calculator')),
    'vo2-max-calculator': dynamic(() => import('@/components/calculators/health-fitness/vo2-max-calculator')),
    'running-pace-calculator': dynamic(() => import('@/components/calculators/health-fitness/running-pace-calculator')),
    'running-speed-to-calories-burned-calculator': dynamic(() => import('@/components/calculators/health-fitness/calories-burned-running-calculator')),
    'cycling-power-output-calculator': dynamic(() => import('@/components/calculators/health-fitness/cycling-power-output-calculator')),
    'swimming-lap-time-calculator': dynamic(() => import('@/components/calculators/health-fitness/swimming-lap-time-calculator')),
    'rowing-split-calculator': dynamic(() => import('@/components/calculators/health-fitness/rowing-split-calculator')),
    'mets-calories-burned-calculator': dynamic(() => import('@/components/calculators/health-fitness/mets-calories-burned-calculator')),
    'one-rep-max-strength-calculator': dynamic(() => import('@/components/calculators/health-fitness/one-rep-max-strength-calculator')),
    'paint-coverage-calculator': dynamic(() => import('@/components/calculators/home-improvement/paint-coverage-calculator')),
    'tile-flooring-calculator': dynamic(() => import('@/components/calculators/home-improvement/tile-flooring-calculator')),
    'wallpaper-roll-calculator': dynamic(() => import('@/components/calculators/home-improvement/wallpaper-roll-calculator')),
    'drywall-plasterboard-calculator': dynamic(() => import('@/components/calculators/home-improvement/drywall-plasterboard-calculator')),
    'insulation-r-value-calculator': dynamic(() => import('@/components/calculators/home-improvement/insulation-r-value-calculator')),
    'decking-materials-calculator': dynamic(() => import('@/components/calculators/home-improvement/decking-materials-calculator')),
    'roofing-shingle-calculator': dynamic(() => import('@/components/calculators/home-improvement/roofing-shingle-calculator')),
    'concrete-volume-calculator': dynamic(() => import('@/components/calculators/home-improvement/concrete-volume-calculator')),
    'lighting-layout-calculator': dynamic(() => import('@/components/calculators/home-improvement/lighting-layout-calculator')),
    'hvac-sizing-calculator': dynamic(() => import('@/components/calculators/home-improvement/hvac-sizing-calculator')),
    'staircase-rise-run-calculator': dynamic(() => import('@/components/calculators/home-improvement/staircase-rise-run-calculator')),
    'cost-estimator-renovation-calculator': dynamic(() => import('@/components/calculators/home-improvement/cost-estimator-renovation-calculator')),
    'water-usage-plumbing-flow-calculator': dynamic(() => import('@/components/calculators/home-improvement/water-usage-plumbing-flow-calculator')),
    'garden-landscape-soil-mulch-calculator': dynamic(() => import('@/components/calculators/home-improvement/garden-landscape-soil-mulch-calculator')),
    'beam-bending-calculator': dynamic(() => import('@/components/calculators/engineering/beam-bending-calculator')),
    'hydraulic-pipe-flow-calculator': dynamic(() => import('@/components/calculators/engineering/hydraulic-pipe-flow-calculator')),
    'heat-transfer-calculator': dynamic(() => import('@/components/calculators/engineering/heat-transfer-calculator')),
    'electrical-power-calculator': dynamic(() => import('@/components/calculators/engineering/electrical-power-calculator')),
    'compressive-stress-calculator': dynamic(() => import('@/components/calculators/engineering/compressive-stress-calculator')),
    'cantilever-beam-deflection-calculator': dynamic(() => import('@/components/calculators/engineering/cantilever-beam-deflection-calculator')),
    'natural-frequency-calculator': dynamic(() => import('@/components/calculators/engineering/natural-frequency-calculator')),
    'reynolds-number-calculator': dynamic(() => import('@/components/calculators/engineering/reynolds-number-calculator')),
    'thermal-expansion-calculator': dynamic(() => import('@/components/calculators/engineering/thermal-expansion-calculator')),
    'shear-stress-calculator': dynamic(() => import('@/components/calculators/engineering/shear-stress-calculator')),
    'iq-score-estimator': dynamic(() => import('@/components/calculators/cognitive-psychology/iq-score-estimator')),
    'memory-span-calculator': dynamic(() => import('@/components/calculators/cognitive-psychology/memory-span-calculator')),
    'cognitive-load-calculator': dynamic(() => import('@/components/calculators/cognitive-psychology/cognitive-load-calculator')),
    'personality-trait-calculator': dynamic(() => import('@/components/calculators/cognitive-psychology/personality-trait-calculator')),
    'stroop-effect-reaction-time-calculator': dynamic(() => import('@/components/calculators/cognitive-psychology/stroop-effect-reaction-time-calculator')),
    'mental-fatigue-index-calculator': dynamic(() => import('@/components/calculators/cognitive-psychology/mental-fatigue-index-calculator')),
    'sleep-debt-calculator': dynamic(() => import('@/components/calculators/cognitive-psychology/sleep-debt-calculator')),
    'stress-level-index-calculator': dynamic(() => import('@/components/calculators/cognitive-psychology/stress-level-index-calculator')),
    'ancestry-composition-estimator': dynamic(() => import('@/components/calculators/genetic-ancestry/ancestry-composition-estimator')),
    'genetic-trait-probability-calculator': dynamic(() => import('@/components/calculators/genetic-ancestry/genetic-trait-probability-calculator')),
    'pedigree-analysis-calculator': dynamic(() => import('@/components/calculators/genetic-ancestry/pedigree-analysis-calculator')),
    'genealogy-timeline-generator': dynamic(() => import('@/components/calculators/genetic-ancestry/genealogy-timeline-generator')),
    'carbon-footprint-reduction-calculator': dynamic(() => import('@/components/calculators/environment/carbon-footprint-reduction-calculator')),
    'water-usage-efficiency-calculator': dynamic(() => import('@/components/calculators/environment/water-usage-efficiency-calculator')),
    'recycling-impact-calculator': dynamic(() => import('@/components/calculators/environment/recycling-impact-calculator')),
    'sustainable-diet-impact-calculator': dynamic(() => import('@/components/calculators/environment/sustainable-diet-impact-calculator')),
    'backpacking-load-weight-calculator': dynamic(() => import('@/components/calculators/travel-adventure/backpacking-load-weight-calculator')),
    'hiking-elevation-gain-calculator': dynamic(() => import('@/components/calculators/travel-adventure/hiking-elevation-gain-calculator')),
    'travel-budget-estimator': dynamic(() => import('@/components/calculators/travel-adventure/travel-budget-estimator')),
    'adventure-activity-risk-calculator': dynamic(() => import('@/components/calculators/travel-adventure/adventure-activity-risk-calculator')),
    'battery-life-estimator': dynamic(() => import('@/components/calculators/technology/battery-life-estimator')),
    'power-supply-wattage-calculator': dynamic(() => import('@/components/calculators/technology/power-supply-wattage-calculator')),
    'overclocking-thermal-calculator': dynamic(() => import('@/components/calculators/technology/overclocking-thermal-calculator')),
    'network-bandwidth-calculator': dynamic(() => import('@/components/calculators/technology/network-bandwidth-calculator')),
    'ping-latency-distance-calculator': dynamic(() => import('@/components/calculators/technology/ping-latency-distance-calculator')),
    'ups-runtime-calculator': dynamic(() => import('@/components/calculators/technology/ups-runtime-calculator')),
    'internet-data-usage-estimator': dynamic(() => import('@/components/calculators/technology/internet-data-usage-estimator')),
    'disk-raid-capacity-calculator': dynamic(() => import('@/components/calculators/technology/disk-raid-capacity-calculator')),
    'api-rate-limit-planner': dynamic(() => import('@/components/calculators/technology/api-rate-limit-planner')),
    'regex-performance-checker': dynamic(() => import('@/components/calculators/technology/regex-performance-checker')),
    'image-compression-size-calculator': dynamic(() => import('@/components/calculators/technology/image-compression-size-calculator')),
    'password-entropy-calculator': dynamic(() => import('@/components/calculators/technology/password-entropy-calculator')),
    'hash-collision-probability-calculator': dynamic(() => import('@/components/calculators/technology/hash-collision-probability-calculator')),
    'cloud-cost-estimator': dynamic(() => import('@/components/calculators/technology/cloud-cost-estimator')),
    'subnet-mask-cidr-calculator': dynamic(() => import('@/components/calculators/technology/subnet-mask-cidr-calculator')),
    'download-time-calculator': dynamic(() => import('@/components/calculators/technology/download-time-calculator')),
    'latency-to-throughput-calculator': dynamic(() => import('@/components/calculators/technology/latency-to-throughput-calculator')),
    '3d-print-time-material-calculator': dynamic(() => import('@/components/calculators/technology/3d-print-time-material-calculator')),
    'solar-panel-output-calculator': dynamic(() => import('@/components/calculators/technology/solar-panel-output-calculator')),
    'dice-roll-probability': dynamic(() => import('@/components/calculators/fun-games/dice-roll-probability-calculator')),
    'board-game-scoring': dynamic(() => import('@/components/calculators/fun-games/board-game-scoring-calculator')),
    'rpg-character-stat': dynamic(() => import('@/components/calculators/fun-games/rpg-character-stat-calculator')),
    'esports-kd-ratio': dynamic(() => import('@/components/calculators/fun-games/esports-kd-ratio-calculator')),
    'video-game-xp-level-up': dynamic(() => import('@/components/calculators/fun-games/video-game-xp-level-up-calculator')),
    'movie-marathon-time': dynamic(() => import('@/components/calculators/fun-games/movie-marathon-time-calculator')),
    'book-series-reading-time': dynamic(() => import('@/components/calculators/fun-games/book-series-reading-time-calculator')),
    'song-playlist-duration': dynamic(() => import('@/components/calculators/fun-games/song-playlist-duration-calculator')),
    'pop-culture-age': dynamic(() => import('@/components/calculators/fun-games/pop-culture-age-calculator')),
    'emoji-compatibility': dynamic(() => import('@/components/calculators/fun-games/emoji-compatibility-calculator')),
    'random-nickname-generator': dynamic(() => import('@/components/calculators/fun-games/random-nickname-generator-calculator')),
    'friendship-anniversary': dynamic(() => import('@/components/calculators/fun-games/friendship-anniversary-calculator')),
    'bowling-score': dynamic(() => import('@/components/calculators/fun-games/bowling-score-calculator')),
    'golf-handicap': dynamic(() => import('@/components/calculators/fun-games/golf-handicap-calculator')),
    'fantasy-league-points': dynamic(() => import('@/components/calculators/fun-games/fantasy-league-points-calculator')),
    'party-budget-per-person': dynamic(() => import('@/components/calculators/fun-games/party-budget-per-person-calculator')),
    'bbq-food-drink-quantity': dynamic(() => import('@/components/calculators/fun-games/bbq-food-drink-quantity-calculator')),
    'karaoke-queue-time': dynamic(() => import('@/components/calculators/fun-games/karaoke-queue-time-calculator')),
    'recipe-ingredient-converter': dynamic(() => import('@/components/calculators/cooking-food/recipe-ingredient-converter')),
    'cooking-time-adjuster': dynamic(() => import('@/components/calculators/cooking-food/cooking-time-adjuster')),
    'brining-solution-calculator': dynamic(() => import('@/components/calculators/cooking-food/brining-solution-calculator')),
    'meat-thawing-time-calculator': dynamic(() => import('@/components/calculators/cooking-food/meat-thawing-time-calculator')),
    '50-30-20-budget-calculator': dynamic(() => import('@/components/calculators/personal-budgeting/50-30-20-budget-calculator')),
    'monthly-budget-surplus-deficit-calculator': dynamic(() => import('@/components/calculators/personal-budgeting/monthly-budget-surplus-deficit-calculator')),
    'dti-ratio-calculator': dynamic(() => import('@/components/calculators/personal-budgeting/dti-ratio-calculator')),
    'emergency-fund-goal-calculator': dynamic(() => import('@/components/calculators/personal-budgeting/emergency-fund-goal-calculator')),
    'savings-rate-calculator': dynamic(() => import('@/components/calculators/personal-budgeting/savings-rate-calculator')),
    'break-even-point-calculator': dynamic(() => import('@/components/calculators/business-startup/break-even-point-calculator')),
    'customer-acquisition-cost-calculator': dynamic(() => import('@/components/calculators/business-startup/customer-acquisition-cost-calculator')),
    'lifetime-value-calculator': dynamic(() => import('@/components/calculators/business-startup/lifetime-value-calculator')),
    'burn-rate-calculator': dynamic(() => import('@/components/calculators/business-startup/burn-rate-calculator')),
    'roi-calculator': dynamic(() => import('@/components/calculators/business-startup/roi-calculator')),
    'crypto-mining-profitability-calculator': dynamic(() => import('@/components/calculators/crypto-web3/crypto-mining-profitability-calculator')),
    'crypto-tax-liability-calculator': dynamic(() => import('@/components/calculators/crypto-web3/crypto-tax-liability-calculator')),
    'crypto-staking-reward-calculator': dynamic(() => import('@/components/calculators/crypto-web3/crypto-staking-reward-calculator')),
    'nft-minting-cost-calculator': dynamic(() => import('@/components/calculators/crypto-web3/nft-minting-cost-calculator')),
    'crypto-apy-calculator': dynamic(() => import('@/components/calculators/crypto-web3/crypto-apy-calculator')),
    'due-date-calculator': dynamic(() => import('@/components/calculators/parenting/due-date-calculator')),
    'baby-feeding-amount-calculator': dynamic(() => import('@/components/calculators/parenting/baby-feeding-amount-calculator')),
    'college-savings-goal-calculator': dynamic(() => import('@/components/calculators/parenting/college-savings-goal-calculator')),
    'childcare-cost-affordability-calculator': dynamic(() => import('@/components/calculators/parenting/childcare-cost-affordability-calculator')),
    'date-difference-calculator': dynamic(() => import('@/components/calculators/time-date/date-difference-calculator')),
    'age-calculator': dynamic(() => import('@/components/calculators/time-date/age-calculator')),
    'world-time-zone-converter': dynamic(() => import('@/components/calculators/time-date/world-time-zone-converter')),
    'day-of-the-week-calculator': dynamic(() => import('@/components/calculators/time-date/day-of-the-week-calculator')),
    'working-days-business-days-calculator': dynamic(() => import('@/components/calculators/time-date/working-days-business-days-calculator')),
    // Biology
    'annealing-temperature-calculator': dynamic(() => import('@/components/calculators/biology/annealing-temperature-calculator')),
    'generation-time-calculator': dynamic(() => import('@/components/calculators/biology/generation-time-calculator')),
    'cell-dilution-calculator': dynamic(() => import('@/components/calculators/biology/cell-dilution-calculator')),
    'cell-doubling-time-calculator': dynamic(() => import('@/components/calculators/biology/cell-doubling-time-calculator')),
    'dna-concentration-calculator': dynamic(() => import('@/components/calculators/biology/dna-concentration-calculator')),
    'ligation-calculator': dynamic(() => import('@/components/calculators/biology/ligation-calculator')),
    'log-reduction-calculator': dynamic(() => import('@/components/calculators/biology/log-reduction-calculator')),
    'protein-concentration-calculator': dynamic(() => import('@/components/calculators/biology/protein-concentration-calculator')),
    'carbohydrate-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/carbohydrate-intake-calculator')),
    'electrolyte-replacement-calculator': dynamic(() => import('@/components/calculators/health-fitness/electrolyte-replacement-calculator')),
    'alcohol-calorie-impact-calculator': dynamic(() => import('@/components/calculators/health-fitness/alcohol-calorie-impact-calculator')),
    'sugar-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/sugar-intake-calculator')),
    'caffeine-intake-calculator': dynamic(() => import('@/components/calculators/health-fitness/caffeine-intake-calculator')),
    // Length Conversions
    'meters-to-feet-converter': dynamic(() => import('@/components/calculators/conversions/meters-to-feet-converter')),
    'feet-to-meters-converter': dynamic(() => import('@/components/calculators/conversions/feet-to-meters-converter')),
    'centimeters-to-inches-converter': dynamic(() => import('@/components/calculators/conversions/centimeters-to-inches-converter')),
    'inches-to-centimeters-converter': dynamic(() => import('@/components/calculators/conversions/inches-to-centimeters-converter')),
    'millimeters-to-inches-converter': dynamic(() => import('@/components/calculators/conversions/millimeters-to-inches-converter')),
    'inches-to-millimeters-converter': dynamic(() => import('@/components/calculators/conversions/inches-to-millimeters-converter')),
    'meters-to-yards-converter': dynamic(() => import('@/components/calculators/conversions/meters-to-yards-converter')),
    'yards-to-meters-converter': dynamic(() => import('@/components/calculators/conversions/yards-to-meters-converter')),
    'miles-to-kilometers-converter': dynamic(() => import('@/components/calculators/conversions/miles-to-kilometers-converter')),
    'kilometers-to-miles-converter': dynamic(() => import('@/components/calculators/conversions/kilometers-to-miles-converter')),
    'nautical-miles-to-kilometers-converter': dynamic(() => import('@/components/calculators/conversions/nautical-miles-to-kilometers-converter')),
    'kilometers-to-nautical-miles-converter': dynamic(() => import('@/components/calculators/conversions/kilometers-to-nautical-miles-converter')),
    'micrometers-to-millimeters-converter': dynamic(() => import('@/components/calculators/conversions/micrometers-to-millimeters-converter')),
    'nanometers-to-meters-converter': dynamic(() => import('@/components/calculators/conversions/nanometers-to-meters-converter')),
    'light-years-to-kilometers-converter': dynamic(() => import('@/components/calculators/conversions/light-years-to-kilometers-converter')),
    'parsecs-to-light-years-converter': dynamic(() => import('@/components/calculators/conversions/parsecs-to-light-years-converter')),
    'astronomical-units-to-kilometers-converter': dynamic(() => import('@/components/calculators/conversions/astronomical-units-to-kilometers-converter')),
    'fathoms-to-meters-converter': dynamic(() => import('@/components/calculators/conversions/fathoms-to-meters-converter')),
    'chains-to-meters-converter': dynamic(() => import('@/components/calculators/conversions/chains-to-meters-converter')),
    'rods-to-feet-converter': dynamic(() => import('@/components/calculators/conversions/rods-to-feet-converter')),
    // Area Conversions
    'square-meters-to-square-feet-converter': dynamic(() => import('@/components/calculators/conversions/square-meters-to-square-feet-converter')),
    'square-feet-to-square-meters-converter': dynamic(() => import('@/components/calculators/conversions/square-feet-to-square-meters-converter')),
    'square-kilometers-to-square-miles-converter': dynamic(() => import('@/components/calculators/conversions/square-kilometers-to-square-miles-converter')),
    'square-miles-to-square-kilometers-converter': dynamic(() => import('@/components/calculators/conversions/square-miles-to-square-kilometers-converter')),
    'acres-to-square-meters-converter': dynamic(() => import('@/components/calculators/conversions/acres-to-square-meters-converter')),
    'square-meters-to-acres-converter': dynamic(() => import('@/components/calculators/conversions/square-meters-to-acres-converter')),
    'hectares-to-acres-converter': dynamic(() => import('@/components/calculators/conversions/hectares-to-acres-converter')),
    'acres-to-hectares-converter': dynamic(() => import('@/components/calculators/conversions/acres-to-hectares-converter')),
    'square-yards-to-square-feet-converter': dynamic(() => import('@/components/calculators/conversions/square-yards-to-square-feet-converter')),
    'square-feet-to-square-yards-converter': dynamic(() => import('@/components/calculators/conversions/square-feet-to-square-yards-converter')),
    'square-inches-to-square-centimeters-converter': dynamic(() => import('@/components/calculators/conversions/square-inches-to-square-centimeters-converter')),
    'square-centimeters-to-square-inches-converter': dynamic(() => import('@/components/calculators/conversions/square-centimeters-to-square-inches-converter')),
    'square-miles-to-acres-converter': dynamic(() => import('@/components/calculators/conversions/square-miles-to-acres-converter')),
    'acres-to-square-miles-converter': dynamic(() => import('@/components/calculators/conversions/acres-to-square-miles-converter')),
    'square-meters-to-square-yards-converter': dynamic(() => import('@/components/calculators/conversions/square-meters-to-square-yards-converter')),
    'square-yards-to-square-meters-converter': dynamic(() => import('@/components/calculators/conversions/square-yards-to-square-meters-converter')),
    'square-centimeters-to-square-meters-converter': dynamic(() => import('@/components/calculators/conversions/square-centimeters-to-square-meters-converter')),
    'square-meters-to-square-centimeters-converter': dynamic(() => import('@/components/calculators/conversions/square-meters-to-square-centimeters-converter')),
    'hectares-to-square-kilometers-converter': dynamic(() => import('@/components/calculators/conversions/hectares-to-square-kilometers-converter')),
    'square-kilometers-to-hectares-converter': dynamic(() => import('@/components/calculators/conversions/square-kilometers-to-hectares-converter')),
    // Volume Conversions
    'liters-to-gallons-converter': dynamic(() => import('@/components/calculators/conversions/liters-to-gallons-converter')),
    'gallons-to-liters-converter': dynamic(() => import('@/components/calculators/conversions/gallons-to-liters-converter')),
    'milliliters-to-cups-converter': dynamic(() => import('@/components/calculators/conversions/milliliters-to-cups-converter')),
    'cups-to-milliliters-converter': dynamic(() => import('@/components/calculators/conversions/cups-to-milliliters-converter')),
    'pints-to-liters-converter': dynamic(() => import('@/components/calculators/conversions/pints-to-liters-converter')),
    'liters-to-pints-converter': dynamic(() => import('@/components/calculators/conversions/liters-to-pints-converter')),
    'quarts-to-liters-converter': dynamic(() => import('@/components/calculators/conversions/quarts-to-liters-converter')),
    'liters-to-quarts-converter': dynamic(() => import('@/components/calculators/conversions/liters-to-quarts-converter')),
    'cubic-meters-to-liters-converter': dynamic(() => import('@/components/calculators/conversions/cubic-meters-to-liters-converter')),
    'liters-to-cubic-meters-converter': dynamic(() => import('@/components/calculators/conversions/liters-to-cubic-meters-converter')),
    'cubic-feet-to-gallons-converter': dynamic(() => import('@/components/calculators/conversions/cubic-feet-to-gallons-converter')),
    'gallons-to-cubic-feet-converter': dynamic(() => import('@/components/calculators/conversions/gallons-to-cubic-feet-converter')),
    'cubic-inches-to-milliliters-converter': dynamic(() => import('@/components/calculators/conversions/cubic-inches-to-milliliters-converter')),
    'milliliters-to-cubic-inches-converter': dynamic(() => import('@/components/calculators/conversions/milliliters-to-cubic-inches-converter')),
    'tablespoons-to-milliliters-converter': dynamic(() => import('@/components/calculators/conversions/tablespoons-to-milliliters-converter')),
    'milliliters-to-tablespoons-converter': dynamic(() => import('@/components/calculators/conversions/milliliters-to-tablespoons-converter')),
    'teaspoons-to-milliliters-converter': dynamic(() => import('@/components/calculators/conversions/teaspoons-to-milliliters-converter')),
    'milliliters-to-teaspoons-converter': dynamic(() => import('@/components/calculators/conversions/milliliters-to-teaspoons-converter')),
    'ounces-to-milliliters-converter': dynamic(() => import('@/components/calculators/conversions/ounces-to-milliliters-converter')),
    'milliliters-to-ounces-converter': dynamic(() => import('@/components/calculators/conversions/milliliters-to-ounces-converter')),
    'kilometers-per-hour-to-miles-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/kilometers-per-hour-to-miles-per-hour-converter')),
    'miles-per-hour-to-kilometers-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/miles-per-hour-to-kilometers-per-hour-converter')),
    'meters-per-second-to-kilometers-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/meters-per-second-to-kilometers-per-hour-converter')),
    'kilometers-per-hour-to-meters-per-second-converter': dynamic(() => import('@/components/calculators/conversions/kilometers-per-hour-to-meters-per-second-converter')),
    'miles-per-hour-to-meters-per-second-converter': dynamic(() => import('@/components/calculators/conversions/miles-per-hour-to-meters-per-second-converter')),
    'meters-per-second-to-miles-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/meters-per-second-to-miles-per-hour-converter')),
    'feet-per-second-to-meters-per-second-converter': dynamic(() => import('@/components/calculators/conversions/feet-per-second-to-meters-per-second-converter')),
    'meters-per-second-to-feet-per-second-converter': dynamic(() => import('@/components/calculators/conversions/meters-per-second-to-feet-per-second-converter')),
    'knots-to-kilometers-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/knots-to-kilometers-per-hour-converter')),
    'kilometers-per-hour-to-knots-converter': dynamic(() => import('@/components/calculators/conversions/kilometers-per-hour-to-knots-converter')),
    'knots-to-miles-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/knots-to-miles-per-hour-converter')),
    'miles-per-hour-to-knots-converter': dynamic(() => import('@/components/calculators/conversions/miles-per-hour-to-knots-converter')),
    'mach-number-to-kilometers-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/mach-number-to-kilometers-per-hour-converter')),
    'kilometers-per-hour-to-mach-number-converter': dynamic(() => import('@/components/calculators/conversions/kilometers-per-hour-to-mach-number-converter')),
    'mach-number-to-miles-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/mach-number-to-miles-per-hour-converter')),
    'miles-per-hour-to-mach-number-converter': dynamic(() => import('@/components/calculators/conversions/miles-per-hour-to-mach-number-converter')),
    'meters-per-second-to-knots-converter': dynamic(() => import('@/components/calculators/conversions/meters-per-second-to-knots-converter')),
    'knots-to-meters-per-second-converter': dynamic(() => import('@/components/calculators/conversions/knots-to-meters-per-second-converter')),
    'feet-per-second-to-miles-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/feet-per-second-to-miles-per-hour-converter')),
    'miles-per-hour-to-feet-per-second-converter': dynamic(() => import('@/components/calculators/conversions/miles-per-hour-to-feet-per-second-converter')),
    'seconds-to-minutes-converter': dynamic(() => import('@/components/calculators/conversions/seconds-to-minutes-converter')),
    'minutes-to-seconds-converter': dynamic(() => import('@/components/calculators/conversions/minutes-to-seconds-converter')),
    'minutes-to-hours-converter': dynamic(() => import('@/components/calculators/conversions/minutes-to-hours-converter')),
    'hours-to-minutes-converter': dynamic(() => import('@/components/calculators/conversions/hours-to-minutes-converter')),
    'hours-to-days-converter': dynamic(() => import('@/components/calculators/conversions/hours-to-days-converter')),
    'days-to-hours-converter': dynamic(() => import('@/components/calculators/conversions/days-to-hours-converter')),
    'days-to-weeks-converter': dynamic(() => import('@/components/calculators/conversions/days-to-weeks-converter')),
    'weeks-to-days-converter': dynamic(() => import('@/components/calculators/conversions/weeks-to-days-converter')),
    'weeks-to-months-converter': dynamic(() => import('@/components/calculators/conversions/weeks-to-months-converter')),
    'months-to-weeks-converter': dynamic(() => import('@/components/calculators/conversions/months-to-weeks-converter')),
    'months-to-years-converter': dynamic(() => import('@/components/calculators/conversions/months-to-years-converter')),
    'years-to-months-converter': dynamic(() => import('@/components/calculators/conversions/years-to-months-converter')),
    'seconds-to-hours-converter': dynamic(() => import('@/components/calculators/conversions/seconds-to-hours-converter')),
    'hours-to-seconds-converter': dynamic(() => import('@/components/calculators/conversions/hours-to-seconds-converter')),
    'seconds-to-days-converter': dynamic(() => import('@/components/calculators/conversions/seconds-to-days-converter')),
    'days-to-seconds-converter': dynamic(() => import('@/components/calculators/conversions/days-to-seconds-converter')),
    'seconds-to-weeks-converter': dynamic(() => import('@/components/calculators/conversions/seconds-to-weeks-converter')),
    'weeks-to-seconds-converter': dynamic(() => import('@/components/calculators/conversions/weeks-to-seconds-converter')),
    'minutes-to-days-converter': dynamic(() => import('@/components/calculators/conversions/minutes-to-days-converter')),
    'days-to-minutes-converter': dynamic(() => import('@/components/calculators/conversions/days-to-minutes-converter')),
    'pascals-to-atmospheres-converter': dynamic(() => import('@/components/calculators/conversions/pascals-to-atmospheres-converter')),
    'atmospheres-to-pascals-converter': dynamic(() => import('@/components/calculators/conversions/atmospheres-to-pascals-converter')),
    'pascals-to-bars-converter': dynamic(() => import('@/components/calculators/conversions/pascals-to-bars-converter')),
    'bars-to-pascals-converter': dynamic(() => import('@/components/calculators/conversions/bars-to-pascals-converter')),
    'pascals-to-psi-converter': dynamic(() => import('@/components/calculators/conversions/pascals-to-psi-converter')),
    'psi-to-pascals-converter': dynamic(() => import('@/components/calculators/conversions/psi-to-pascals-converter')),
    'atmospheres-to-bars-converter': dynamic(() => import('@/components/calculators/conversions/atmospheres-to-bars-converter')),
    'bars-to-atmospheres-converter': dynamic(() => import('@/components/calculators/conversions/bars-to-atmospheres-converter')),
    'atmospheres-to-psi-converter': dynamic(() => import('@/components/calculators/conversions/atmospheres-to-psi-converter')),
    'psi-to-atmospheres-converter': dynamic(() => import('@/components/calculators/conversions/psi-to-atmospheres-converter')),
    'bars-to-psi-converter': dynamic(() => import('@/components/calculators/conversions/bars-to-psi-converter')),
    'psi-to-bars-converter': dynamic(() => import('@/components/calculators/conversions/psi-to-bars-converter')),
    'torr-to-pascals-converter': dynamic(() => import('@/components/calculators/conversions/torr-to-pascals-converter')),
    'pascals-to-torr-converter': dynamic(() => import('@/components/calculators/conversions/pascals-to-torr-converter')),
    'torr-to-atmospheres-converter': dynamic(() => import('@/components/calculators/conversions/torr-to-atmospheres-converter')),
    'atmospheres-to-torr-converter': dynamic(() => import('@/components/calculators/conversions/atmospheres-to-torr-converter')),
    'kpa-to-psi-converter': dynamic(() => import('@/components/calculators/conversions/kpa-to-psi-converter')),
    'psi-to-kpa-converter': dynamic(() => import('@/components/calculators/conversions/psi-to-kpa-converter')),
    'mmhg-to-bars-converter': dynamic(() => import('@/components/calculators/conversions/mmhg-to-bars-converter')),
    'bars-to-mmhg-converter': dynamic(() => import('@/components/calculators/conversions/bars-to-mmhg-converter')),
    'joules-to-kilojoules-converter': dynamic(() => import('@/components/calculators/conversions/joules-to-kilojoules-converter')),
    'kilojoules-to-joules-converter': dynamic(() => import('@/components/calculators/conversions/kilojoules-to-joules-converter')),
    'joules-to-calories-converter': dynamic(() => import('@/components/calculators/conversions/joules-to-calories-converter')),
    'calories-to-joules-converter': dynamic(() => import('@/components/calculators/conversions/calories-to-joules-converter')),
    'joules-to-kilocalories-converter': dynamic(() => import('@/components/calculators/conversions/joules-to-kilocalories-converter')),
    'kilocalories-to-joules-converter': dynamic(() => import('@/components/calculators/conversions/kilocalories-to-joules-converter')),
    'joules-to-watt-hours-converter': dynamic(() => import('@/components/calculators/conversions/joules-to-watt-hours-converter')),
    'watt-hours-to-joules-converter': dynamic(() => import('@/components/calculators/conversions/watt-hours-to-joules-converter')),
    'kwh-to-joules-converter': dynamic(() => import('@/components/calculators/conversions/kwh-to-joules-converter')),
    'joules-to-kwh-converter': dynamic(() => import('@/components/calculators/conversions/joules-to-kwh-converter')),
    'calories-to-kilocalories-converter': dynamic(() => import('@/components/calculators/conversions/calories-to-kilocalories-converter')),
    'kilocalories-to-calories-converter': dynamic(() => import('@/components/calculators/conversions/kilocalories-to-calories-converter')),
    'btu-to-joules-converter': dynamic(() => import('@/components/calculators/conversions/btu-to-joules-converter')),
    'joules-to-btu-converter': dynamic(() => import('@/components/calculators/conversions/joules-to-btu-converter')),
    'kwh-to-btu-converter': dynamic(() => import('@/components/calculators/conversions/kwh-to-btu-converter')),
    'btu-to-kwh-converter': dynamic(() => import('@/components/calculators/conversions/btu-to-kwh-converter')),
    'electronvolts-to-joules-converter': dynamic(() => import('@/components/calculators/conversions/electronvolts-to-joules-converter')),
    'joules-to-electronvolts-converter': dynamic(() => import('@/components/calculators/conversions/joules-to-electronvolts-converter')),
    'foot-pounds-to-joules-converter': dynamic(() => import('@/components/calculators/conversions/foot-pounds-to-joules-converter')),
    'joules-to-foot-pounds-converter': dynamic(() => import('@/components/calculators/conversions/joules-to-foot-pounds-converter')),
    'watts-to-kilowatts-converter': dynamic(() => import('@/components/calculators/conversions/watts-to-kilowatts-converter')),
    'kilowatts-to-watts-converter': dynamic(() => import('@/components/calculators/conversions/kilowatts-to-watts-converter')),
    'watts-to-megawatts-converter': dynamic(() => import('@/components/calculators/conversions/watts-to-megawatts-converter')),
    'megawatts-to-watts-converter': dynamic(() => import('@/components/calculators/conversions/megawatts-to-watts-converter')),
    'kilowatts-to-megawatts-converter': dynamic(() => import('@/components/calculators/conversions/kilowatts-to-megawatts-converter')),
    'megawatts-to-kilowatts-converter': dynamic(() => import('@/components/calculators/conversions/megawatts-to-kilowatts-converter')),
    'watts-to-horsepower-converter': dynamic(() => import('@/components/calculators/conversions/watts-to-horsepower-converter')),
    'horsepower-to-watts-converter': dynamic(() => import('@/components/calculators/conversions/horsepower-to-watts-converter')),
    'kilowatts-to-horsepower-converter': dynamic(() => import('@/components/calculators/conversions/kilowatts-to-horsepower-converter')),
    'horsepower-to-kilowatts-converter': dynamic(() => import('@/components/calculators/conversions/horsepower-to-kilowatts-converter')),
    'watts-to-dbm-converter': dynamic(() => import('@/components/calculators/conversions/watts-to-dbm-converter')),
    'dbm-to-watts-converter': dynamic(() => import('@/components/calculators/conversions/dbm-to-watts-converter')),
    'watts-to-btu-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/watts-to-btu-per-hour-converter')),
    'btu-per-hour-to-watts-converter': dynamic(() => import('@/components/calculators/conversions/btu-per-hour-to-watts-converter')),
    'kilowatts-to-btu-per-hour-converter': dynamic(() => import('@/components/calculators/conversions/kilowatts-to-btu-per-hour-converter')),
    'btu-per-hour-to-kilowatts-converter': dynamic(() => import('@/components/calculators/conversions/btu-per-hour-to-kilowatts-converter')),
    'ergs-per-second-to-watts-converter': dynamic(() => import('@/components/calculators/conversions/ergs-per-second-to-watts-converter')),
    'watts-to-ergs-per-second-converter': dynamic(() => import('@/components/calculators/conversions/watts-to-ergs-per-second-converter')),
    'foot-pounds-per-second-to-watts-converter': dynamic(() => import('@/components/calculators/conversions/foot-pounds-per-second-to-watts-converter')),
    'watts-to-foot-pounds-per-second-converter': dynamic(() => import('@/components/calculators/conversions/watts-to-foot-pounds-per-second-converter')),
    'shoe-size-converter': dynamic(() => import('@/components/calculators/conversions/shoe-size-converter')),
    'cloth-size-converter': dynamic(() => import('@/components/calculators/conversions/cloth-size-converter')),
    'hat-size-converter': dynamic(() => import('@/components/calculators/conversions/hat-size-converter')),
    'ring-size-converter': dynamic(() => import('@/components/calculators/conversions/ring-size-converter')),
    'belt-size-converter': dynamic(() => import('@/components/calculators/conversions/belt-size-converter')),
    'foot-length-to-cm-converter': dynamic(() => import('@/components/calculators/conversions/foot-length-to-cm-converter')),
    'glove-size-converter': dynamic(() => import('@/components/calculators/conversions/glove-size-converter')),
    'body-measurement-to-cloth-size-converter': dynamic(() => import('@/components/calculators/conversions/body-measurement-to-cloth-size-converter')),
    'height-converter': dynamic(() => import('@/components/calculators/conversions/height-converter')),
};

export default function CalculatorPage({ params }: { params: { slug: string; calcSlug: string } }) {
  const category = categories.find((c) => c.slug === params.slug);
  const calculator = calculators.find((c) => c.slug === params.calcSlug && c.category === params.slug);

  if (!category || !calculator) {
    notFound();
  }

  const CalculatorComponent = calculatorComponents[calculator.slug] || null;

  return (
    <div className="flex flex-col items-center min-h-screen bg-secondary/50">
      <div className="w-full max-w-4xl bg-background p-4 sm:p-8 flex-1">
        <div className="mb-8">
          <Button asChild variant="ghost" className="mb-4">
            <Link href={`/category/${category.slug}`}>
              <ArrowLeft className="mr-2 h-4 w-4" />
              Back to {category.name}
            </Link>
          </Button>
          <div className="flex items-center gap-4">
             <CategoryIcon name={category.Icon} className="h-10 w-10 text-primary flex-shrink-0" strokeWidth={1.5} />
            <div>
              <h1 className="text-2xl md:text-3xl font-bold text-foreground">
                {calculator.name}
              </h1>
              <p className="text-muted-foreground mt-1">{calculator.description}</p>
            </div>
          </div>
        </div>

        {CalculatorComponent ? (
          <>
            <CalculatorComponent />
            
            {/* Embed Widget Section */}
            <EmbedWidget categorySlug={category.slug} calculatorSlug={calculator.slug} />
          </>
        ) : (
          <Card className="w-full text-center shadow-md mt-8">
            <CardHeader>
                <Construction className="mx-auto h-16 w-16 mb-6 text-primary" strokeWidth={1.5} />
                <CardTitle className="text-2xl md:text-3xl font-bold text-foreground mb-4">
                    Calculator Coming Soon
                </CardTitle>
            </CardHeader>
            <CardContent className="p-8 pt-0">
                <p className="text-lg text-muted-foreground">
                    This calculator is under construction. Please check back later!
                </p>
            </CardContent>
        </Card>
        )}
      </div>
    </div>
  );
}

    